/**
 *  Copyright 2011 Diego Ceccarelli
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package eu.europeana.assets.service.ir.text.cli;


import org.apache.log4j.Logger;

import eu.europeana.assets.common.CommonApiServerConfiguration;
import eu.europeana.assets.common.CommonApiServerConfigurationImpl;
import eu.europeana.assets.common.dao.mongodb.MongoDbManager;
import eu.europeana.assets.common.exception.ObjectNotFoundException;
import eu.europeana.assets.common.exception.ObjectNotStoredException;
import eu.europeana.assets.factory.AssetsAbstractFactory;
import eu.europeana.assets.factory.AssetsAbstractFactoryImpl;
import eu.europeana.assets.service.ir.text.domain.QueryLogRecordImpl;
import eu.europeana.assets.service.ir.text.domain.SessionImpl;
import eu.europeana.assets.service.ir.text.querylog.reader.ng.EuropeanaJsonSessionReader;
import eu.europeana.assets.service.ir.text.querylog.session.ng.Session;


/**
 * AbstractCommandLineInterface.java
 *
 * @author Diego Ceccarelli, diego.ceccarelli@isti.cnr.it
 * created on 09/ott/2011
 */

public class StoreJsonLogsOnMongoDbCLI extends AbstractCommandLineInterface {
	
	private static Logger logger = Logger
			.getLogger(StoreJsonLogsOnMongoDbCLI.class);
	protected static String usage = "java -cp $jar " + StoreJsonLogsOnMongoDbCLI.class
			+ " -input fileinput";
	
	protected static String[] params = new String[] {INPUT};
	public StoreJsonLogsOnMongoDbCLI(String[] args) {
		super(args);
	}
	
	public StoreJsonLogsOnMongoDbCLI(String[] args, String[] parameters,String usage) {
		super(args,parameters,usage);
	}
	
	public static void main(String[] args) throws ObjectNotStoredException, ObjectNotFoundException {

		StoreJsonLogsOnMongoDbCLI cli = new StoreJsonLogsOnMongoDbCLI(args, params, usage);
		CommonApiServerConfiguration conf = new CommonApiServerConfigurationImpl();
		MongoDbManager mongoDb = new MongoDbManager();
		AssetsAbstractFactory objectFactory = new AssetsAbstractFactoryImpl();
		mongoDb.setObjectFactory(objectFactory);
	
		mongoDb.setCommonApiServerConfiguration(conf);
		mongoDb.init();
		
		
		
		
		String inputFile = cli.getInput();
		
		long start = System.currentTimeMillis();
		logger.info("storing sessions and records in "+inputFile+" in mongoDb");
		
		String line;
		int sessions = 0;
		int records = 0;
		EuropeanaJsonSessionReader reader = new EuropeanaJsonSessionReader(inputFile);
		
		for (Session s: reader){
		
				SessionImpl sessionToStore = s.getSessionToStore();
				mongoDb.store(sessionToStore);
				for (QueryLogRecordImpl r : s.getRecordToStore()){
					mongoDb.store(r);
					records++;
				}
				sessions++;
			}
	
		long end = System.currentTimeMillis();
		logger.info("stored "+sessions + " sessions and "+records+" records in "+ ( end - start )+" millis");
		//String json = "{\"start\":\"Feb 13, 2011 5:02:51 AM\",\"end\":\"Feb 13, 2011 5:02:51 AM\",\"country\":\"Netherlands\",\"successful\":false,\"ip\":\"80.101.129.147\",\"userAgent\":\"check_http/v1.4.14 (nagios-plugins 1.4.14)\",\"queries\":[\"mozart\"],\"session\":[{\"query\":\"mozart\",\"cleanQuery\":\"mozart\",\"date\":\"Feb 13, 2011 5:02:51 AM\",\"page\":\"1\",\"hasQuery\":true,\"hasClick\":false}]}";
		System.exit(0);
		
	}



	
}
