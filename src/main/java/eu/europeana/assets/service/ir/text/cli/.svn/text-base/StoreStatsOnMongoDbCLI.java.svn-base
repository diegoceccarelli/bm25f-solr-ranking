/**
 *  Copyright 2011 Diego Ceccarelli
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package eu.europeana.assets.service.ir.text.cli;


import java.io.BufferedReader;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;

import org.apache.log4j.Logger;

import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;

import eu.europeana.assets.common.CommonApiServerConfiguration;
import eu.europeana.assets.common.CommonApiServerConfigurationImpl;
import eu.europeana.assets.common.dao.IrTextDataStoreDao;
import eu.europeana.assets.common.dao.IrTextDataStoreDaoImpl;
import eu.europeana.assets.common.dao.mongodb.IrTextMongoDbManager;
import eu.europeana.assets.common.dao.mongodb.MongoDbManager;
import eu.europeana.assets.common.exception.ObjectNotFoundException;
import eu.europeana.assets.common.exception.ObjectNotStoredException;
import eu.europeana.assets.factory.AssetsAbstractFactory;
import eu.europeana.assets.factory.AssetsAbstractFactoryImpl;
import eu.europeana.assets.service.ir.text.domain.JsonStat;
import eu.europeana.assets.service.ir.text.domain.Stats;
import eu.europeana.assets.service.ir.text.util.IOUtils;
import eu.europeana.assets.service.ir.text.util.Util;


/**
 * StoreStatsOnMongoDb.java
 *
 * @author Diego Ceccarelli, diego.ceccarelli@isti.cnr.it
 * created on 09/ott/2011
 */

public class StoreStatsOnMongoDbCLI extends AbstractCommandLineInterface {
	/** TODO accept both a file or a directory **/
	private static Logger logger = Logger
			.getLogger(StoreStatsOnMongoDbCLI.class);
	protected static String usage = "java -cp $jar " + StoreStatsOnMongoDbCLI.class
			+ " -input folder";
	
	protected static String[] params = new String[] {INPUT};
	public StoreStatsOnMongoDbCLI(String[] args) {
		super(args);
	}
	
	public StoreStatsOnMongoDbCLI(String[] args, String[] parameters,String usage) {
		super(args,parameters,usage);
	}
	
	public static void main(String[] args) throws ObjectNotStoredException, ObjectNotFoundException {

		StoreStatsOnMongoDbCLI cli = new StoreStatsOnMongoDbCLI(args, params, usage);
		CommonApiServerConfiguration conf = new CommonApiServerConfigurationImpl();
		IrTextMongoDbManager mongoDb = new IrTextMongoDbManager();
		
		
		AssetsAbstractFactory objectFactory = new AssetsAbstractFactoryImpl();
		mongoDb.setObjectFactory(objectFactory);
		mongoDb.setCommonApiServerConfiguration(conf);
		mongoDb.init();
		IrTextDataStoreDaoImpl dao = new IrTextDataStoreDaoImpl();
		
		
		dao.setIrTextMongoDbManager(mongoDb);
		dao.clearIrTextStats();
		logger.info("deleted all stats");
		
		
		
		String input = cli.getInput();
		File inputDir = new File(input);
		if (! inputDir.exists()){
			logger.error("stats folder ( "+ inputDir+" )  does not exist.");
			System.exit(-1);
		}
		if (! inputDir.isDirectory()){
			logger.error("invalid stats folder");
			System.exit(-1);
		}
		long start = System.currentTimeMillis();
		for (String file : inputDir.list(cli.new JsonFilter())){
			logger.info("storing stats and in "+file+" on mongoDb");
			BufferedReader br = IOUtils.getPlainOrCompressedUTF8Reader(new File(inputDir, file).toString());
			String line = null;
			try {
				while ((line = br.readLine()) != null){
					System.out.println(line);
					JsonStat s = JsonStat.fromJson(line);
					Stats stats = s.toStat();
					//System.out.println(stats);
					mongoDb.store(stats);
				}
			} catch (JsonSyntaxException e) {
				logger.error("storing the stats ( "+e.toString()+" )");
				System.exit(-1);
			} catch (IOException e) {
				logger.error("storing the stats ( "+e.toString()+" )");
				System.exit(-1);
			}
			
		}
	
		
		
		long end = System.currentTimeMillis();
		logger.info("stored stats in "+ ( end - start )+" millis");
		//String json = "{\"start\":\"Feb 13, 2011 5:02:51 AM\",\"end\":\"Feb 13, 2011 5:02:51 AM\",\"country\":\"Netherlands\",\"successful\":false,\"ip\":\"80.101.129.147\",\"userAgent\":\"check_http/v1.4.14 (nagios-plugins 1.4.14)\",\"queries\":[\"mozart\"],\"session\":[{\"query\":\"mozart\",\"cleanQuery\":\"mozart\",\"date\":\"Feb 13, 2011 5:02:51 AM\",\"page\":\"1\",\"hasQuery\":true,\"hasClick\":false}]}";
		System.exit(0);
		
	}
	
	class JsonFilter implements FilenameFilter {

		public boolean accept(File dir, String name) {
			return (name.endsWith(".json"));
		}
	}




	
}
